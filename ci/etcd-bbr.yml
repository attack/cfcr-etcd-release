resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: git-cfcr-etcd-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cfcr-etcd-release
    branch: master

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: gcs-bbl-state
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: etcd-bosh

- name: single-node-deployment
  type: bosh-deployment
  source:
    deployment: bbr-etcd-single-node

- name: bbr-github-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-kubo-gitbot-access-token))

jobs:
- name: deploy-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
    - get: gcs-bbl-state
  - task: unpack-bbl-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: bash
      inputs:
      - name: gcs-bbl-state
      outputs:
      - name: bbl-state
      run:
        path: bash
        args:
        - -c
        - |
          set -euo pipefail
          mkdir -p bbl-state
          cd bbl-state
          tar xvf ../gcs-bbl-state/etcd-bosh
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: single-node-deployment
    params:
      source_file: bbl-state/metadata
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      - git-cfcr-etcd-release/manifests/ops-files/enable-bbr.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      vars:
        deployment-name: bbr-etcd-single-node
        network-name: default
      cleanup: true

- name: run-bbr-tests
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      passed: ['deploy-etcd-single-node']
      trigger: true
    - get: bbr-release
      resource: bbr-github-release
  - task: run-tests
    file: git-cfcr-etcd-release/ci/tasks/run-bbr-tests.yml
    privileged: true
    params:
      JUMPBOX_PRIVATE_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      JUMPBOX_USERNAME: jumpbox
      JUMPBOX_HOST: ((cfcr-etcd-bosh.jumpbox_url))
      BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
      BOSH_DEPLOYMENT: bbr-etcd-single-node
      BOSH_CLIENT: ((cfcr-etcd-bosh.client))
      BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
      BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))

- name: delete-etcd-single-node
  serial: true
  serial_groups: [etcd]
  plan:
  - get: git-cfcr-etcd-release
    passed: ['run-bbr-tests']
    trigger: true
  - put: single-node-deployment
    params:
      delete:
        enabled: true
