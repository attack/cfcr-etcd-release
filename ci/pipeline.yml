resource_types:
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: git-cfcr-etcd-release
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cfcr-etcd-release
    branch: master

- name: git-kubo-etcd-release
  type: git
  source:
    uri: https://github.com/pivotal-cf-experimental/kubo-etcd
    branch: master

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: single-node-deployment
  type: bosh-deployment
  source:
    deployment: etcd-single-node
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))

- name: etcd-deployment
  type: bosh-deployment
  source:
    deployment: etcd
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))

- name: etcd-migrate-deployment
  type: bosh-deployment
  source:
    deployment: etcd-migrate
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))

- name: etcd-scale-deployment
  type: bosh-deployment
  source:
    deployment: etcd-scale
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))

- name: etcd-multiaz-deployment
  type: bosh-deployment
  source:
    deployment: etcd-multiaz
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))

jobs:
- name: deploy-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      cleanup: true

- name: run-acceptance-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ deploy-etcd ]
    trigger: true
  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -c
        - |
          set -eu
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh run-errand acceptance

- name: delete-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ run-acceptance-etcd ]
    trigger: true
  - put: etcd-deployment
    params:
      delete:
        enabled: true

- name: deploy-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: single-node-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      - git-cfcr-etcd-release/manifests/ops-files/deployment-name.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      vars:
        deployment-name: etcd-single-node
      cleanup: true

- name: run-acceptance-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ deploy-etcd-single-node ]
    trigger: true
  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-single-node
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -c
        - |
          set -eu
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh run-errand acceptance

- name: delete-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ run-acceptance-etcd-single-node ]
    trigger: true
  - put: single-node-deployment
    params:
      delete:
        enabled: true

- name: migrate-from-kubo-etcd
  serial: true
  serial_groups: [etcd-migrate]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: git-kubo-etcd-release
      trigger: true
    - get: stemcell
  - task: create-kubo-etcd-release
    config:
      inputs:
      - name: git-kubo-etcd-release
      outputs:
      - name: kubo-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-kubo-etcd-release --tarball=kubo-etcd-release-tarball/kubo-etcd-release.tgz --timestamp-version
  - put: etcd-migrate-deployment
    params:
      manifest: git-kubo-etcd-release/manifests/1-node-with-ssl-bosh-dns-like-cfcr.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - kubo-etcd-release-tarball/kubo-etcd-release.tgz
      ops_files:
      - git-kubo-etcd-release/manifests/operations/deployment-name.yml
      cleanup: true
      vars:
        deployment-name: etcd-migrate
  - task: set-and-check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-migrate
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -exuc
        - |
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl put test-key test-value"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl get test-key | grep test-value"
  - task: create-cfcr-etcd-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-migrate-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/deployment-name.yml
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      cleanup: true
      vars:
        deployment-name: etcd-migrate
  - task: set-and-check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-migrate
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -exuc
        - |
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl get test-key | grep test-value"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl member list | grep etcd.default.${BOSH_DEPLOYMENT}.bosh"

- name: delete-etcd-migrate
  serial: true
  serial_groups: [etcd-migrate]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ migrate-from-kubo-etcd ]
    trigger: true
  - put: etcd-migrate-deployment
    params:
      delete:
        enabled: true

- name: AZ-failure-test
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-cfcr-etcd-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-multiaz-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/deployment-name.yml
      cleanup: true
      vars:
        deployment-name: etcd-multiaz
  - task: delete-vm
    config:
      platform: linux
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-multiaz
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - |
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          vm_id="$(bosh vms | grep vm | tail -1 | awk '{print $5}')"
          bosh -n delete-vm $vm_id

  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-multiaz
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -c
        - |
          set -eu
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh run-errand acceptance
- name: delete-etcd-multiaz
  plan:
  - get: git-cfcr-etcd-release
    passed: [ AZ-failure-test ]
    trigger: true
  - put: etcd-multiaz-deployment
    params:
      delete:
        enabled: true


- name: scale-from-1-to-3-nodes
  serial: true
  serial_groups: [etcd-scale]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-cfcr-etcd-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-scale-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/deployment-name.yml
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      cleanup: true
      vars:
        deployment-name: etcd-scale
  - task: set-and-check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-scale
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -exuc
        - |
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl put test-key test-value"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl get test-key | grep test-value"
  - put: etcd-scale-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/deployment-name.yml
      cleanup: true
      vars:
        deployment-name: etcd-scale
  - task: set-and-check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-scale
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      run:
        path: bash
        args:
        - -exuc
        - |
          ROOT="${PWD}"
          echo "${JUMPBOX_SSH_KEY}" > "${ROOT}/jumpbox.key"
          chmod 600 "${ROOT}/jumpbox.key"
          export BOSH_ALL_PROXY="ssh+socks5://${JUMPBOX_URL}?private-key=${ROOT}/jumpbox.key"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl get test-key | grep test-value"
          bosh ssh etcd/0 -c "ETCDCTL_API=3 /var/vcap/jobs/etcd/bin/etcdctl member list | wc -l | grep 3"
          bosh ssh etcd/0 -c "/var/vcap/jobs/etcd/bin/etcdctl cluster-health | grep 'cluster is healthy'"

- name: delete-etcd-scale
  serial: true
  serial_groups: [etcd-scale]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ scale-from-1-to-3-nodes ]
    trigger: true
  - put: etcd-scale-deployment
    params:
      delete:
        enabled: true
